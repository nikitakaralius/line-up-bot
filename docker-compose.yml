services:
  db:
    image: postgres:17-alpine
    container_name: lineup_db
    environment:
      POSTGRES_USER: lineup
      POSTGRES_PASSWORD: lineup
      POSTGRES_DB: lineup
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U lineup"]
      interval: 5s
      timeout: 5s
      retries: 10

  migrations:
    build:
      context: .
      target: migrations
    container_name: lineup_bot_migrations
    depends_on:
      db:
        condition: service_healthy
    command:
      - -path
      - /app/migrations
      - -database
      - postgres://lineup:lineup@db:5432/lineup?sslmode=disable
      - up
    restart: no

  service:
    build:
      context: .
      target: service
    container_name: lineup_bot_service
    depends_on:
      db:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    environment:
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
      POSTGRES_DSN: postgres://lineup:lineup@db:5432/lineup?sslmode=disable
    command:
      - -dsn
      - postgres://lineup:lineup@db:5432/lineup?sslmode=disable
      - -verbose
      - "true"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/healthz" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    restart: unless-stopped

  worker:
    build:
      context: .
      target: worker
    container_name: lineup_bot_worker
    depends_on:
      db:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    environment:
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
    command:
      - -dsn
      - postgres://lineup:lineup@db:5432/lineup?sslmode=disable
      - -verbose
      - "true"
    restart: unless-stopped

volumes:
  pgdata:
